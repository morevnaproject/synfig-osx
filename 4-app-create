#!/bin/bash
# Copyright (C) 2008-2009 Simone Karin Lehmann, simone at lisanet dot de 
# gp-app 1.9.5
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#

#======= HEADER ===========

set -e

BUILDDIR=~/src/macports/SynfigStudio-app
MACPORTS=/tmp/skl/SynfigStudio.app/Contents/Resources
SCRIPTPATH=`dirname "$0"`

if [ ! -e "/tmp/skl/SynfigStudio.app" ]; then
  bash "${SCRIPTPATH}/1-link-prep"
fi

export PATH="$MACPORTS/bin:$MACPORTS/sbin:$PATH"
export SYNFIG_ROOT=${MACPORTS}/
export SYNFIG_MODULE_LIST=${MACPORTS}/etc/synfig_modules.cfg

#======= HEADER END ===========

# get commandline parameter. There is only one, namely the patch level number of this release
PL=$1

# get OS X version. 8=Tiger, 9=Leopard, 10=Snowleopard
OS=`uname -r | cut -d "." -f1`
if [ $OS -eq 9 -o $OS -eq 10 ]; then
GTKFONT=9.8
THEME=Leopard
else
GTKFONT=12.5
THEME=Tiger
fi

# set OS code name
OSNAME=$THEME
if [ $OS -eq 10 ]; then
	OSNAME=Snowleopard
fi


VERSION=`eval "synfig" --version 2>&1 | cut -d " " -f 2`
echo Synfig version is: $VERSION
if [ "$PL" != "" ]; then
	echo patch level is: $PL
fi
echo Now trying to build your new SynfigStudio app ...

DIR=~/src/macports
SYNFIGAPP="$DIR/SynfigStudio-new-app/Contents/Resources"
#GP="$DIR/GimpPorts"

cp -R "$SCRIPTPATH/app-template" "$DIR/SynfigStudio-new-app"

#cd "$SCRIPTPATH"/LauncherCode
#xcodebuild -configuration Deployment
#cd -
#cp -R "$SCRIPTPATH/LauncherCode/build/Deployment/ScriptExec.app/Contents/Resources/*"  "$SYNFIGAPP"
#mkdir -p "$DIR/SynfigStudio-new-app/Contents/MacOS"
#cp -R "$SCRIPTPATH/LauncherCode/build/Deployment/ScriptExec.app/Contents/MacOS/ScriptExec "$SYNFIGAPP/../MacOS/SynfigStudio"

# copy binaries from gimp-launcher 
# In MacPorts 1.7 there will be a config option
#cp "$MP/Applications/ScriptExec.app/Contents/MacOS/ScriptExec" "$GIMPAPP/../MacOS/Gimp"
#cp -R "$MP/Applications/ScriptExec.app/Contents/Resources/MenuBar.nib" "$GIMPAPP"

# copy all data
echo copying data ...
cp -R $MACPORTS/bin "$SYNFIGAPP/bin"
cp -R $MACPORTS/etc "$SYNFIGAPP/etc"
cp -R $MACPORTS/lib "$SYNFIGAPP/lib"
cp -R $MACPORTS/share "$SYNFIGAPP/share"

# Cleaning

# remove svn meta data
cd "$DIR"
find "SynfigStudio-new-app" -name ".svn" -print0 | xargs -0 rm -rf
find "SynfigStudio-new-app" -name ".DS_Store" -print0 | xargs -0 rm -rf

#echo cleaning up some stuff in lib directories ...
cd "$SYNFIGAPP"
rm -rf lib/gtk-2.0/include
rm -rf lib/python2.7/test
rm -rf lib/python2.7/*/test
find lib \( -name "*.la" -or -name "*.a" \)  -delete
find . -name "*.pyo" -delete

echo cleaning up some stuff in share ...
cd "$SYNFIGAPP/share"
rm -rf gutenprint/doc
rm -rf gutenprint/samples
rm -rf ghostscript/fonts
rm -rf ghostscript/*/doc
rm -rf ghostscript/*/examples

echo cleaning up locales ...
find locale \( \! -name "gtk*" -and \! -name "synfig*" \! -name "gutenprint*" \) -delete


# configuring some files
#echo "configuring some files ..."
# dbus
#sed -i "" -e "s|Gimp.app/Contents/Resources/var|var|g" "$GIMPAPP/etc/dbus-1/system.conf"
# fonts
#sed -i "" -e "s|<dir>/tmp/skl.*fonts</dir>|<dir>~/Library/Application Support/Gimp/fonts</dir>|g" "$GIMPAPP/etc/fonts/fonts.conf"
#sed -i "" -e "s|<dir>~/\.fonts</dir>|<dir>~/Library/Fonts</dir>|g" "$GIMPAPP/etc/fonts/fonts.conf"
#sed -i "" -e "s|<cachedir>/tmp/skl.*/fontconfig</cachedir>|<cachedir>~/Library/Application Support/Gimp/cache/fonts</cachedir>|g" "$GIMPAPP/etc/fonts/fonts.conf"
#sed -i "" -e "s|<cachedir>~/\.fontconfig</cachedir>||g" "$GIMPAPP/etc/fonts/fonts.conf"
# gtk
#cat << EOF >> "$GIMPAPP/etc/gtk-2.0/gtkrc"

# this is for Gimp's print preview
#gtk-print-preview-command="open %f"
# this is Mac OS X default font
#gtk-font-name = "Lucida Grande $GTKFONT"
#EOF
if [ $OS -eq 9 -o $OS -eq 10 ]; then
cat << EOF >> "$SYNFIGAPP/etc/gtk-2.0/gtkrc"
# This is the formula to calculate the font size for GIMP's menus
# font_size = (72 / X11_dpi) * 13
#
# X11_dpi is the dpi value your X11 is set to. Since 10.5.7 this is by default: 96 dpi
# to change the dpi setting open Terminal.app and type
#     defaults write org.x.X11 dpi -int <new-dpi-value>
# BTW, the default font size for Mac OS X is 13 pixel.
#
# X11 set to 96 dpi
# gtk-font-name="Lucida Grande 9.8"
# X11 set to 113 dpi 
# gtk-font-name = "Lucida Grande 8.3"

EOF
fi

# app bundle files
echo "*** Please do _NOT_ delete this file. The file script depends on it. ***" > "$SYNFIGAPP/v$VERSION"
sed -i "" -e "s/_VERSION_/$VERSION/g" "$SYNFIGAPP/../MacOS/synfigstudio" 
sed -i "" -e "s/_VERSION_/$VERSION$PL/g" "$SYNFIGAPP/../Info.plist" 

# save information about the ports which make up this build
echo "Synfig Studio $VERSION$PL for Mac OS X $OSNAME" > "$SYNFIGAPP/build-info.txt"
date >> "$SYNFIGAPP/build-info.txt"
port installed >> "$SYNFIGAPP/build-info.txt"
sed -i "" -e "s/are currently installed:/were used to build this package:/g" "$SYNFIGAPP/build-info.txt"

cd "$DIR"
mv "SynfigStudio-new-app" "SynfigStudio.app"
echo
echo "Your new Synfig Studio app bundle should now be ready to run. Enjoy."
echo "-Zelgadis"
echo 

